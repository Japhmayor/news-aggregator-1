{"version":3,"sources":["../../src/utils/dt.js"],"names":["MIN_YEAR","_isStr","str","_isNum","n","_toTwoChars","_toUTCMonth","d","getUTCMonth","_toUTCDay","getUTCDate","_toTwoCharsMonth","_toTwoCharsDay","_toDateTime","datetime","_d","Date","_tStr","toTimeString","_tArr","split","_y","getUTCFullYear","_m","_day","REG_DATE","DateUtil","isValidDate","trim","length","m","match","thisYear","getFullYear","getFromDate","yearMinus","dateNow","yearTo","monthTo","dayTo","getToDate","toUTCMillis","strDate","arr","UTC","parseInt","toUTCSecond","toTimeDate","publishedAt","_arr","_arrDate","_date","_time","replace","substring"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,QAAQ,GAAI,IAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,GAAG;AAAA,SAAI,OAAOA,GAAP,KAAe,QAAnB;AAAA,CAAlB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,CAAC;AAAA,SAAI,OAAOA,CAAP,KAAa,QAAjB;AAAA,CAAhB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAD,CAAC;AAAA,SAAIA,CAAC,GAAG,EAAJ,GAAS,MAAIA,CAAb,GAAiB,KAAGA,CAAxB;AAAA,CAArB;AAAA,IACEE,WAAW,GAAG,SAAdA,WAAc,CAAAC,CAAC;AAAA,SAAIA,CAAC,CAACC,WAAF,KAAkB,CAAtB;AAAA,CADjB;AAAA,IAEEC,SAAS,GAAG,SAAZA,SAAY,CAAAF,CAAC;AAAA,SAAIA,CAAC,CAACG,UAAF,EAAJ;AAAA,CAFf;AAAA,IAGEC,gBAAgB,GAAG,sBAAKL,WAAL,EAAkBD,WAAlB,CAHrB;AAAA,IAIEO,cAAc,GAAG,sBAAKH,SAAL,EAAgBJ,WAAhB,CAJnB;;AAMA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC9B,MAAMC,EAAE,GAAG,IAAIC,IAAJ,CAASF,QAAT,CAAX;AAAA,MACEG,KAAK,GAAGF,EAAE,CAACG,YAAH,EADV;AAAA,MAEEC,KAAK,GAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,CAFV;AAAA,MAGEC,EAAE,GAAGN,EAAE,CAACO,cAAH,EAHP;AAAA,MAIEC,EAAE,GAAGZ,gBAAgB,CAACI,EAAD,CAJvB;AAAA,MAKES,IAAI,GAAGZ,cAAc,CAACG,EAAD,CALvB;;AAMA,SAAUI,KAAK,CAAC,CAAD,CAAf,SAAsBK,IAAtB,SAA8BD,EAA9B,SAAoCF,EAApC;AACD,CARD;;AAUA,IAAMI,QAAQ,GAAG,yBAAjB;AAEA,IAAMC,QAAQ,GAAG;AAEdC,EAAAA,WAFc,uBAEFzB,GAFE,EAEE;AACf;AACA,QAAI,CAACD,MAAM,CAACC,GAAD,CAAP,IAAgBA,GAAG,CAAC0B,IAAJ,GAAWC,MAAX,KAAsB,EAA1C,EAA+C;AAC5C,aAAO,KAAP;AACD,KAJa,CAMf;;;AACA,QAAMC,CAAC,GAAG5B,GAAG,CAAC6B,KAAJ,CAAUN,QAAV,CAAV,CAPe,CASf;;AACA,QAAIK,CAAC,KAAK,IAAN,IAAc,OAAOA,CAAP,KAAa,QAA3B,IAAuCA,CAAC,CAACD,MAAF,KAAa,CAAxD,EAA4D;AACzD,aAAO,KAAP;AACD;;AAEF,QAAMG,QAAQ,GAAG,IAAIhB,IAAJ,GAAWiB,WAAX,EAAjB,CAde,CAgBhB;;AACC,QAAKH,CAAC,CAAC,CAAD,CAAD,CAAKD,MAAL,GAAc,CAAf,IAAqBC,CAAC,CAAC,CAAD,CAAD,GAAO9B,QAA5B,IAAwC8B,CAAC,CAAC,CAAD,CAAD,GAAOE,QAAnD,EAA6D;AAC1D,aAAO,KAAP;AACD,KAnBa,CAoBhB;;;AACC,QAAKF,CAAC,CAAC,CAAD,CAAD,CAAKD,MAAL,GAAc,CAAf,IAAqBC,CAAC,CAAC,CAAD,CAAD,GAAO,CAA5B,IAAiCA,CAAC,CAAC,CAAD,CAAD,GAAO,EAA5C,EAAgD;AAC7C,aAAO,KAAP;AACD,KAvBa,CAwBhB;;;AACC,QAAKA,CAAC,CAAC,CAAD,CAAD,CAAKD,MAAL,GAAc,CAAf,IAAqBC,CAAC,CAAC,CAAD,CAAD,GAAO,CAA5B,IAAiCA,CAAC,CAAC,CAAD,CAAD,GAAO,EAA5C,EAAgD;AAC7C,aAAO,KAAP;AACD;;AAEF,WAAO,IAAP;AACD,GAhCc;AAkCfI,EAAAA,WAlCe,uBAkCHC,SAlCG,EAkCO;AACrB,QAAMC,OAAO,GAAG,IAAIpB,IAAJ,EAAhB;AAAA,QACGqB,MAAM,GAAGD,OAAO,CAACd,cAAR,EADZ;AAAA,QAEGgB,OAAO,GAAG3B,gBAAgB,CAACyB,OAAD,CAF7B;AAAA,QAGGG,KAAK,GAAG3B,cAAc,CAACwB,OAAD,CAHzB;;AAKA,WAAQC,MAAM,GAACF,SAAR,GAAqB,GAArB,GAA2BG,OAA3B,GAAqC,GAArC,GAA2CC,KAAlD;AACA,GAzCc;AA2CfC,EAAAA,SA3Ce,uBA2CJ;AACV,QAAMJ,OAAO,GAAG,IAAIpB,IAAJ,EAAhB;AAAA,QACGqB,MAAM,GAAGD,OAAO,CAACd,cAAR,EADZ;AAAA,QAEGgB,OAAO,GAAG3B,gBAAgB,CAACyB,OAAD,CAF7B;AAAA,QAGGG,KAAK,GAAG3B,cAAc,CAACwB,OAAD,CAHzB;;AAKA,WAAOC,MAAM,GAAG,GAAT,GAAeC,OAAf,GAAyB,GAAzB,GAA+BC,KAAtC;AACD,GAlDe;AAoDhBE,EAAAA,WApDgB,uBAoDJC,OApDI,EAoDI;AAClB,QAAIhB,QAAQ,CAACC,WAAT,CAAqBe,OAArB,CAAJ,EAAmC;AACjC,UAAMC,GAAG,GAAGD,OAAO,CAACtB,KAAR,CAAc,GAAd,CAAZ;AACA,aAAOJ,IAAI,CAAC4B,GAAL,CAASD,GAAG,CAAC,CAAD,CAAZ,EAAiBE,QAAQ,CAACF,GAAG,CAAC,CAAD,CAAJ,EAAQ,EAAR,CAAR,GAAoB,CAArC,EAAwCA,GAAG,CAAC,CAAD,CAA3C,CAAP;AACD,KAHD,MAGO;AACL,aAAO,KAAK,CAAZ;AACD;AACF,GA3De;AA6DhBG,EAAAA,WAAW,EAAE,qBAACJ,OAAD;AAAA,WAAahB,QAAQ,CAACe,WAAT,CAAqBC,OAArB,IAA8B,IAA3C;AAAA,GA7DG;AA+DhBK,EAAAA,UAAU,EAAE,oBAACC,WAAD,EAAiB;AAC3B,QAAI7C,MAAM,CAAC6C,WAAD,CAAV,EAAyB;AACvB,aAAOnC,WAAW,CAACmC,WAAD,CAAlB;AACD,KAH0B,CAI3B;;;AACA,QAAMC,IAAI,GAAGhD,MAAM,CAAC+C,WAAD,CAAN,GACRA,WAAW,CAAC5B,KAAZ,CAAkB,GAAlB,CADQ,GAER,CAAC,EAAD,CAFL;AAAA,QAGE8B,QAAQ,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQ7B,KAAR,CAAc,GAAd,CAHb;AAAA,QAIE+B,KAAK,GAAGD,QAAQ,CAACrB,MAAT,KAAoB,CAApB,GACDqB,QAAQ,CAAC,CAAD,CADP,SACcA,QAAQ,CAAC,CAAD,CADtB,SAC6BA,QAAQ,CAAC,CAAD,CADrC,GAEJ,EANN;AAAA,QAOEE,KAAK,GAAGH,IAAI,CAAC,CAAD,CAAJ,GACJA,IAAI,CAAC,CAAD,CAAJ,CAAQI,OAAR,CAAgB,GAAhB,EAAqB,EAArB,EAAyBC,SAAzB,CAAmC,CAAnC,EAAsC,CAAtC,CADI,GAEJ,SATN;;AAUC,WAAUF,KAAV,SAAmBD,KAAnB;AACD;AA/Ec,CAAjB;eAmFezB,Q","sourcesContent":["import pipe from './pipe'\r\n\r\nconst MIN_YEAR =  1999;\r\n\r\nconst _isStr = str => typeof str === 'string';\r\nconst _isNum = n => typeof n === 'number';\r\n\r\nconst _toTwoChars = n => n < 10 ? '0'+n : ''+n\r\n, _toUTCMonth = d => d.getUTCMonth() + 1\r\n, _toUTCDay = d => d.getUTCDate()\r\n, _toTwoCharsMonth = pipe(_toUTCMonth, _toTwoChars)\r\n, _toTwoCharsDay = pipe(_toUTCDay, _toTwoChars);\r\n\r\nconst _toDateTime = datetime => {\r\n  const _d = new Date(datetime)\r\n  , _tStr = _d.toTimeString()\r\n  , _tArr = _tStr.split(' ')\r\n  , _y = _d.getUTCFullYear()\r\n  , _m = _toTwoCharsMonth(_d)\r\n  , _day = _toTwoCharsDay(_d);\r\n  return `${_tArr[0]} ${_day}-${_m}-${_y}`;\r\n};\r\n\r\nconst REG_DATE = /(\\d{4})-(\\d{2})-(\\d{2})/;\r\n\r\nconst DateUtil = {\r\n\r\n   isValidDate(str){\r\n\t   // STRING FORMAT yyyy-mm-dd\r\n\t   if (!_isStr(str) || str.trim().length !== 10 ) {\r\n       return false;\r\n     }\r\n\r\n\t   // m[1] is year 'YYYY' * m[2] is month 'MM' * m[3] is day 'DD'\r\n\t   const m = str.match(REG_DATE);\r\n\r\n\t   // STR IS NOT FIT m IS NOT OBJECT\r\n\t   if( m === null || typeof m !== 'object' || m.length !== 4 ) {\r\n       return false;\r\n     }\r\n\r\n\t   const thisYear = new Date().getFullYear();\r\n\r\n\t  // YEAR CHECK\r\n\t   if( (m[1].length < 4) || m[1] < MIN_YEAR || m[1] > thisYear) {\r\n       return false;\r\n     }\r\n\t  // MONTH CHECK\r\n\t   if( (m[2].length < 2) || m[2] < 1 || m[2] > 12) {\r\n       return false;\r\n     }\r\n\t  // DAY CHECK\r\n\t   if( (m[3].length < 2) || m[3] < 1 || m[3] > 31) {\r\n       return false;\r\n     }\r\n\r\n\t   return true;\r\n  },\r\n\r\n  getFromDate(yearMinus){\r\n\t  const dateNow = new Date()\r\n    , yearTo = dateNow.getUTCFullYear()\r\n    , monthTo = _toTwoCharsMonth(dateNow)\r\n    , dayTo = _toTwoCharsDay(dateNow);\r\n\r\n\t  return (yearTo-yearMinus) + \"-\" + monthTo + \"-\" + dayTo;\r\n  },\r\n\r\n  getToDate(){\r\n\t  const dateNow = new Date()\r\n    , yearTo = dateNow.getUTCFullYear()\r\n    , monthTo = _toTwoCharsMonth(dateNow)\r\n    , dayTo = _toTwoCharsDay(dateNow);\r\n\r\n\t  return yearTo + \"-\" + monthTo + \"-\" + dayTo;\r\n },\r\n\r\n toUTCMillis(strDate){\r\n   if (DateUtil.isValidDate(strDate)) {\r\n     const arr = strDate.split('-');\r\n     return Date.UTC(arr[0], parseInt(arr[1],10)-1, arr[2]);\r\n   } else {\r\n     return void 0;\r\n   }\r\n },\r\n\r\n toUTCSecond: (strDate) => DateUtil.toUTCMillis(strDate)/1000,\r\n\r\n toTimeDate: (publishedAt) => {\r\n   if (_isNum(publishedAt)) {\r\n     return _toDateTime(publishedAt);\r\n   }\r\n   //yyyy-MM-ddTHH:mm:ssZ\r\n   const _arr = _isStr(publishedAt)\r\n      ? publishedAt.split('T')\r\n      : ['']\r\n   , _arrDate = _arr[0].split('-')\r\n   , _date = _arrDate.length === 3\r\n       ? `${_arrDate[2]}-${_arrDate[1]}-${_arrDate[0]}`\r\n       : ''\r\n   , _time = _arr[1]\r\n       ? _arr[1].replace('Z', '').substring(0, 8)\r\n       : 'No Time';\r\n    return `${_time} ${_date}`;\r\n  }\r\n\r\n}\r\n\r\nexport default DateUtil\r\n"],"file":"dt.js"}