{"version":3,"sources":["../../src/utils/Dom.js"],"names":["_isStr","str","_domParser","DOMParser","parseFromString","textInput","documentElement","textContent","Dom","htmlDecode","_textInput"],"mappings":";;;;;AAAA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,GAAG;AAAA,SAAI,OAAOA,GAAP,KAAe,QAAnB;AAAA,CAAlB;;AAEA,IAAMC,UAAU,GAAGC,SAAS,GACvB,IAAIA,SAAJ,EADuB,GAEvB;AACEC,EAAAA,eAAe,EAAE,yBAAAC,SAAS;AAAA,WAAK;AAC5BC,MAAAA,eAAe,EAAE;AACbC,QAAAA,WAAW,EAAEF;AADA;AADW,KAAL;AAAA;AAD5B,CAFL;;AAUA,IAAMG,GAAG,GAAG;AACVC,EAAAA,UADU,sBACCJ,SADD,EACW;AAClB,QAAMK,UAAU,GAAGV,MAAM,CAACK,SAAD,CAAN,GAAoBA,SAApB,GAAgC,EAAnD;;AACA,WAAOH,UAAU,CACdE,eADI,CACYM,UADZ,EACwB,WADxB,EAEJJ,eAFI,CAEYC,WAFnB;AAGF;AANS,CAAZ;eASeC,G","sourcesContent":["const _isStr = str => typeof str === 'string';\r\n\r\nconst _domParser = DOMParser\r\n   ? new DOMParser()\r\n   : {\r\n       parseFromString: textInput => ({\r\n          documentElement: {\r\n              textContent: textInput\r\n          }\r\n       })\r\n     };\r\n\r\nconst Dom = {\r\n  htmlDecode(textInput){\r\n     const _textInput = _isStr(textInput) ? textInput : ''\r\n     return _domParser\r\n       .parseFromString(_textInput, \"text/html\")\r\n       .documentElement.textContent;\r\n  }\r\n};\r\n\r\nexport default Dom\r\n"],"file":"Dom.js"}