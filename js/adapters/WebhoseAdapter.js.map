{"version":3,"sources":["../../src/adapters/WebhoseAdapter.js"],"names":["C","ROOT_URL","W","W_B","_toNews","json","posts","requestsLeft","arr","_hm","forEach","post","title","_title","trim","articleId","uuid","source","description","text","publishedAt","published","push","articles","sortBy","_toBroadcast","option","items","broadcast_at","author","show","name","undefined","url","full_show","_rToArticles","NEWS","BRODCAST","WebhoseAdapter","toArticles","toNews","requestType"],"mappings":"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","file":"WebhoseAdapter.js","sourcesContent":["\r\nconst C = {\r\n  ROOT_URL: 'https://webhose.io',\r\n  W: 'webhose',\r\n  W_B: 'webhose_brodcast'\r\n};\r\n\r\nconst _toNews = (json) => {\r\n  const { posts, requestsLeft='' } = json;\r\n  const arr = []\r\n      , _hm = {};\r\n  posts.forEach(post => {\r\n    const { title='' } = post\r\n         , _title = title.trim();\r\n    if (_title && !_hm[_title] ){\r\n      post.articleId = post.uuid\r\n      post.source = C.W\r\n      post.description = post.text\r\n      post.publishedAt = post.published\r\n      arr.push(post)\r\n      _hm[_title] = true;\r\n    }\r\n  })\r\n\r\n  return {\r\n    source: C.W,\r\n    articles: arr,\r\n    sortBy: requestsLeft\r\n  };\r\n}\r\n\r\nconst _toBroadcast = (json, option) => {\r\n  const { items, requestsLeft } = json\r\n      , articles = [];\r\n  //console.log(json)\r\n  items.forEach(post => {\r\n    post.articleId = post.uuid\r\n    post.source = C.W_B\r\n    post.title = post.text\r\n    post.description = post.text\r\n    post.publishedAt = post.broadcast_at\r\n    post.author = post.show\r\n          ? post.show.name\r\n          : undefined\r\n    post.url = C.ROOT_URL + post.full_show\r\n    articles.push(post)\r\n  })\r\n  return {\r\n    source: C.W_B,\r\n    articles: articles,\r\n    sortBy: requestsLeft\r\n  };\r\n}\r\n\r\nconst _rToArticles = {\r\n   NEWS: _toNews,\r\n   BRODCAST: _toBroadcast\r\n};\r\n\r\nconst WebhoseAdapter = {\r\n  toArticles: (posts=[], source) => {\r\n    const arr = []\r\n        , _hm = {};\r\n    posts.forEach(post => {\r\n      const { title='' } = post\r\n           , _title = title.trim();\r\n      if (_title && !_hm[_title] ){\r\n        post.articleId = post.uuid\r\n        post.source = \"webhose\"\r\n        post.description = post.text\r\n        post.publishedAt = post.published\r\n        arr.push(post)\r\n        _hm[_title] = true;\r\n      }\r\n    })\r\n\r\n    return arr;\r\n  },\r\n\r\n  toNews: (json, option) => {\r\n    const { requestType } = option\r\n        , toArticles = _rToArticles[requestType];\r\n\r\n    return toArticles(json, option);\r\n  }\r\n}\r\n\r\nexport default WebhoseAdapter\r\n"]}