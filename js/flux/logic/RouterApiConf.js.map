{"version":3,"sources":["../../../src/flux/logic/RouterApiConf.js"],"names":["MSG_ERR_TAIL","MSG_ERR_DF","RouterApiConf","getApiConf","id","apiKey","getNewsKey","api","News","adapter","msgErr","NewsSearch","getWebhoseKey","Webhose","StackOverflow","Iex","undefined"],"mappings":";;;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,eAAe,8CAArB;AACA,IAAMC,aAAa,0BAAnB;;AAEA,IAAMC,gBAAgB;AACpBC,cAAY,oBAACC,EAAD,EAAQ;AAClB,YAAOA,EAAP;AACE,WAAK,GAAL;AACE,eAAO;AACLC,kBAAQ,gBAAMC,UAAN,EADH;AAELC,eAAK,cAAIC,IAFJ;AAGLC,mBAAS,mBAAQD,IAHZ;AAILE,+BAAmBV;AAJd,SAAP;AAMF,WAAK,IAAL;AACE,eAAO;AACLK,kBAAQ,gBAAMC,UAAN,EADH;AAELC,eAAK,cAAII,UAFJ;AAGLF,mBAAS,mBAAQD,IAHZ;AAILE,+BAAmBV;AAJd,SAAP;AAMF,WAAK,GAAL;AACE,eAAO;AACLK,kBAAQ,gBAAMO,aAAN,EADH;AAELL,eAAK,cAAIM,OAFJ;AAGLJ,mBAAS,mBAAQI,OAHZ;AAILH,sCAA0BV;AAJrB,SAAP;AAMF,WAAK,IAAL;AACE,eAAO;AACLK,kBAAQ,IADH;AAELE,eAAK,cAAIO,aAFJ;AAGLL,mBAAS,mBAAQK,aAHZ;AAILJ,4CAAgCV;AAJ3B,SAAP;AAMF,WAAK,KAAL;AACG,eAAO;AACLK,kBAAQ,IADH;AAELE,eAAK,cAAIQ,GAFJ;AAGLN,mBAAS,mBAAQM,GAHZ;AAILL,+BAAmBV;AAJd,SAAP;AAMH;AACE,eAAO;AACLK,kBAAQW,SADH;AAELN,kBAAQT;AAFH,SAAP;AArCJ;AA0CD;AA5CmB,CAAtB;;kBA+CeC,a","file":"RouterApiConf.js","sourcesContent":["\r\nimport Store from '../stores/Store'\r\n\r\nimport Adapter from '../../adapters/Adapters'\r\nimport Api from '../../api/Api'\r\n\r\nconst MSG_ERR_TAIL = 'Key is not set. \\nPlease, set and try again.';\r\nconst MSG_ERR_DF = 'Unknow news API provider';\r\n\r\nconst RouterApiConf = {\r\n  getApiConf: (id) => {\r\n    switch(id){\r\n      case 'N':\r\n        return {\r\n          apiKey: Store.getNewsKey(),\r\n          api: Api.News,\r\n          adapter: Adapter.News,\r\n          msgErr: `NewsApi ${MSG_ERR_TAIL}`\r\n        };\r\n      case 'NS':\r\n        return {\r\n          apiKey: Store.getNewsKey(),\r\n          api: Api.NewsSearch,\r\n          adapter: Adapter.News,\r\n          msgErr: `NewsApi ${MSG_ERR_TAIL}`\r\n        };\r\n      case 'W':\r\n        return {\r\n          apiKey: Store.getWebhoseKey(),\r\n          api: Api.Webhose,\r\n          adapter: Adapter.Webhose,\r\n          msgErr: `Webhose.io API ${MSG_ERR_TAIL}`\r\n        };\r\n      case 'SO':\r\n        return {\r\n          apiKey: true,\r\n          api: Api.StackOverflow,\r\n          adapter: Adapter.StackOverflow,\r\n          msgErr: `StackOverflowApi API ${MSG_ERR_TAIL}`\r\n        };\r\n      case 'IEX':\r\n         return {\r\n           apiKey: true,\r\n           api: Api.Iex,\r\n           adapter: Adapter.Iex,\r\n           msgErr: `IEX API ${MSG_ERR_TAIL}`\r\n         };\r\n      default:\r\n        return {\r\n          apiKey: undefined,\r\n          msgErr: MSG_ERR_DF\r\n        };\r\n    }\r\n  }\r\n}\r\n\r\nexport default RouterApiConf\r\n"]}