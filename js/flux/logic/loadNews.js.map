{"version":3,"sources":["../../../src/flux/logic/loadNews.js"],"names":["_isFn","fn","_fnCatch","error","onFailed","_fFetch","adapter","json","option","onCompleted","news","toNews","itemConf","loadNews","api","uri","getRequestUrl","optionFetch","crOptionFetch","onCheckResponse","checkResponse","onFetch","onCatch"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE;AAAA,SAAI,OAAOA,EAAP,KAAc,UAAlB;AAAA,CAAhB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACxCA,EAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,CAFD;;AAIA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD;AAAA,SAAa,iBAAuC;AAAA,QAA5BC,IAA4B,SAA5BA,IAA4B;AAAA,QAAtBC,MAAsB,SAAtBA,MAAsB;AAAA,QAAdC,WAAc,SAAdA,WAAc;AAClE,QAAMC,IAAI,GAAGJ,OAAO,CAACK,MAAR,CAAeJ,IAAf,EAAqBC,MAArB,CAAb;AACA,QAAMI,QAAQ,GAAGJ,MAAM,CAACI,QAAxB;AACAH,IAAAA,WAAW,CAAC;AAAEC,MAAAA,IAAI,EAAJA,IAAF;AAAQE,MAAAA,QAAQ,EAARA;AAAR,KAAD,CAAX;AACD,GAJe;AAAA,CAAhB;;AAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAASL,MAAT,EAAiBC,WAAjB,EAA8BL,QAA9B,EAAuC;AAAA,MAC9CU,GAD8C,GAC7BN,MAD6B,CAC9CM,GAD8C;AAAA,MACzCR,OADyC,GAC7BE,MAD6B,CACzCF,OADyC;AAGtD,sBAAQ;AACNS,IAAAA,GAAG,EAAED,GAAG,CAACE,aAAJ,CAAkBR,MAAlB,CADC;AAENS,IAAAA,WAAW,EAAEjB,KAAK,CAACc,GAAG,CAACI,aAAL,CAAL,GACRJ,GAAG,CAACI,aAAJ,CAAkBV,MAAlB,CADQ,GACoB,KAAK,CAHhC;AAINA,IAAAA,MAAM,EAAEA,MAJF;AAKNW,IAAAA,eAAe,EAAEL,GAAG,CAACM,aALf;AAMNC,IAAAA,OAAO,EAAEhB,OAAO,CAACC,OAAD,CANV;AAONG,IAAAA,WAAW,EAAEA,WAPP;AAQNa,IAAAA,OAAO,EAAEpB,QARH;AASNE,IAAAA,QAAQ,EAAEA;AATJ,GAAR;AAWD,CAdD;;eAgBeS,Q","sourcesContent":["import fnFetch from '../../utils/fn'\r\n\r\nconst _isFn = fn => typeof fn === \"function\";\r\n\r\nconst _fnCatch = ({ error, onFailed }) => {\r\n  onFailed(error)\r\n}\r\n\r\nconst _fFetch = (adapter) => function({ json, option, onCompleted }){\r\n  const news = adapter.toNews(json, option);\r\n  const itemConf = option.itemConf;\r\n  onCompleted({ news, itemConf })\r\n}\r\n\r\nconst loadNews = function(option, onCompleted, onFailed){\r\n  const { api, adapter } = option;\r\n\r\n  fnFetch({\r\n    uri: api.getRequestUrl(option),\r\n    optionFetch: _isFn(api.crOptionFetch)\r\n       ? api.crOptionFetch(option) : void 0,\r\n    option: option,\r\n    onCheckResponse: api.checkResponse,\r\n    onFetch: _fFetch(adapter),\r\n    onCompleted: onCompleted,\r\n    onCatch: _fnCatch,\r\n    onFailed: onFailed\r\n  })\r\n}\r\n\r\nexport default loadNews\r\n"],"file":"loadNews.js"}