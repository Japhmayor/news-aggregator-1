{"version":3,"sources":["../../../src/flux/actions/NewsActions.js"],"names":["TYPES","LOAD_NEWS","LOAD_NEWS_COMPLETED","LOAD_NEWS_FAILED","REMOVE_NEWS","REMOVE_ALL_NEWS","REMOVE_UNDER_NEWS","NewsActions","createActions","children","listen","option","loadId","_conf","getApiConf","apiKey","adapter","api","Object","assign","completed","failed","msg","msgErr"],"mappings":";;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;AAEO,IAAMA,wBAAQ;AACnBC,aAAW,UADQ;AAEnBC,uBAAqB,mBAFF;AAGnBC,oBAAkB,gBAHC;;AAKnBC,eAAa,YALM;AAMnBC,mBAAiB,eANE;AAOnBC,qBAAmB;AAPA,CAAd;;AAUP,IAAMC,cAAc,iBAAOC,aAAP,mFACjBR,MAAMC,SADW,EACE;AAClBQ,YAAU,CAAC,WAAD,EAAc,QAAd;AADQ,CADF,wDAIjBT,MAAMI,WAJW,EAIG,EAJH,wDAKjBJ,MAAMK,eALW,EAKO,EALP,wDAMjBL,MAAMM,iBANW,EAMS,EANT,0BAApB;;AASAC,YAAYP,MAAMC,SAAlB,EAA6BS,MAA7B,CAAoC,YAAmB;AAAA,MAAVC,MAAU,uEAAH,EAAG;;AAAA,uBAC9BA,MAD8B,CAC7CC,MAD6C;AAAA,MAC7CA,MAD6C,kCACtC,GADsC;AAAA,MAE/CC,KAF+C,GAEvC,wBAAcC,UAAd,CAAyBF,MAAzB,CAFuC;AAAA,MAG7CG,MAH6C,GAGpBF,KAHoB,CAG7CE,MAH6C;AAAA,MAGrCC,OAHqC,GAGpBH,KAHoB,CAGrCG,OAHqC;AAAA,MAG5BC,GAH4B,GAGpBJ,KAHoB,CAG5BI,GAH4B;;AAIrD,MAAIF,MAAJ,EAAW;AACT;AACAG,WAAOC,MAAP,CAAcR,MAAd,EAAsB,EAAEI,cAAF,EAAUC,gBAAV,EAAmBC,QAAnB,EAAtB;AACA,4BAASN,MAAT,EAAiB,KAAKS,SAAtB,EAAiC,KAAKC,MAAtC;AACD,GAJD,MAIO;AACL,SAAKA,MAAL,CAAY,EAAEC,KAAKT,MAAMU,MAAb,EAAZ;AACD;AACF,CAXD;;kBAaehB,W","file":"NewsActions.js","sourcesContent":["import Reflux from 'reflux'\r\n\r\nimport RouterApiConf from '../logic/RouterApiConf'\r\nimport loadNews from '../logic/loadNews'\r\n\r\nexport const TYPES = {\r\n  LOAD_NEWS: 'loadNews',\r\n  LOAD_NEWS_COMPLETED: 'loadNewsCompleted',\r\n  LOAD_NEWS_FAILED: 'loadNewsFailed',\r\n\r\n  REMOVE_NEWS: 'removeNews',\r\n  REMOVE_ALL_NEWS: 'removeAllNews',\r\n  REMOVE_UNDER_NEWS: 'removeUnderNews'\r\n}\r\n\r\nconst NewsActions = Reflux.createActions({\r\n  [TYPES.LOAD_NEWS] : {\r\n    children: ['completed', 'failed']\r\n  },\r\n  [TYPES.REMOVE_NEWS]: {},\r\n  [TYPES.REMOVE_ALL_NEWS]: {},\r\n  [TYPES.REMOVE_UNDER_NEWS]: {}\r\n})\r\n\r\nNewsActions[TYPES.LOAD_NEWS].listen(function(option={}){\r\n  const { loadId='N' } = option\r\n      , _conf = RouterApiConf.getApiConf(loadId)\r\n      , { apiKey, adapter, api } = _conf;\r\n  if (apiKey){\r\n    //console.log(api)\r\n    Object.assign(option, { apiKey, adapter, api })\r\n    loadNews(option, this.completed, this.failed)\r\n  } else {\r\n    this.failed({ msg: _conf.msgErr })\r\n  }\r\n})\r\n\r\nexport default NewsActions\r\n"]}