{"version":3,"sources":["../../../src/flux/stores/ComponentSlice.js"],"names":["NewsDialogLogic","showNewsDialog","slice","itemConf","type","key","Comp","createDialog","NewsPaneLogic","showNewsPane","store","id","paneId","createNewsPane","toggleNewsPane","BrowserLogic","createResult","browserId","data","updateBadge","option","isOpen","Object","assign","toggleBadge","ComponentSlice","dialogInit","newsPaneInit","hmBrowser","onShowNewsDialog","event","r","trigger","SHOW_NEWS_DIALOG","onShowModalDialog","modalDialogType","SHOW_MODAL_DIALOG","onShowNewsPane","pane","browser","SHOW_NEWS_PANE","UPDATE_BROWSER","onToggleNewsPane","TOGGLE_NEWS_PANE","onCloseNewsPane","onShowAbout","SHOW_ABOUT","onShowBrowser","SHOW_BROWSER","onUpdateBrowser","onChangeTheme","themeName","CHANGE_THEME"],"mappings":"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","file":"ComponentSlice.js","sourcesContent":["import { TYPES } from '../actions/ComponentActions'\r\n\r\nimport Factory from '../logic/Factory'\r\n\r\nconst NewsDialogLogic = {\r\n  showNewsDialog(slice, itemConf){\r\n    const { type } = itemConf;\r\n    if (slice[type]){\r\n      return { key:type };\r\n    } else {\r\n      const Comp = Factory.createDialog(itemConf);\r\n      slice[type] = true\r\n      return { key:type, Comp };\r\n    }\r\n  }\r\n}\r\n\r\nconst NewsPaneLogic = {\r\n  showNewsPane(slice, itemConf, store){\r\n    const { type } = itemConf;\r\n    if (slice[type]){\r\n      return { id: itemConf.paneId };\r\n    } else {\r\n      const Comp = Factory.createNewsPane(itemConf, store)\r\n      slice[type] = true;\r\n      return { Comp };\r\n    }\r\n  },\r\n\r\n  toggleNewsPane(itemConf){\r\n    return {\r\n      id: itemConf.paneId\r\n    };\r\n  }\r\n\r\n}\r\n\r\nconst BrowserLogic = {\r\n  createResult(slice, itemConf){\r\n    const { browserId } = itemConf;\r\n    return {\r\n      id: browserId,\r\n      data: slice[browserId]\r\n    };\r\n  },\r\n\r\n  updateBadge(slice, itemConf, option={ isOpen: true }){\r\n    const { browserId, type } = itemConf;\r\n    if (!slice[browserId]){\r\n      slice[browserId] = {}\r\n    }\r\n    slice[browserId][type] = Object.assign({}, slice[browserId][type], option)\r\n    return {\r\n      id: browserId,\r\n      data: slice[browserId]\r\n    };\r\n  },\r\n\r\n  toggleBadge(slice, itemConf){\r\n     const { browserId, type } = itemConf;\r\n     slice[browserId][type].isOpen = !slice[browserId][type].isOpen\r\n     return {\r\n       id: browserId,\r\n       data: slice[browserId]\r\n     };\r\n  }\r\n}\r\n\r\nconst ComponentSlice = {\r\n  dialogInit: {},\r\n  newsPaneInit: {},\r\n  hmBrowser: {},\r\n\r\n  onShowNewsDialog(itemConf, event){\r\n    const r = NewsDialogLogic.showNewsDialog(this.dialogInit, itemConf);\r\n    this.trigger(TYPES.SHOW_NEWS_DIALOG, r)\r\n  },\r\n\r\n  onShowModalDialog(type, option={}){\r\n    option.modalDialogType = type\r\n    this.trigger(TYPES.SHOW_MODAL_DIALOG, option)\r\n  },\r\n\r\n  onShowNewsPane(itemConf){\r\n    const pane = NewsPaneLogic.showNewsPane(this.newsPaneInit, itemConf, this);\r\n    const browser = BrowserLogic.updateBadge(this.hmBrowser, itemConf);\r\n    this.trigger(TYPES.SHOW_NEWS_PANE, pane)\r\n    this.trigger(TYPES.UPDATE_BROWSER, browser)\r\n  },\r\n  onToggleNewsPane(itemConf){\r\n    const browser = BrowserLogic.toggleBadge(this.hmBrowser, itemConf);\r\n    const pane = NewsPaneLogic.toggleNewsPane(itemConf);\r\n    this.trigger(TYPES.TOGGLE_NEWS_PANE, pane)\r\n    this.trigger(TYPES.UPDATE_BROWSER, browser)\r\n  },\r\n  onCloseNewsPane(itemConf){\r\n    const r = BrowserLogic.updateBadge(this.hmBrowser, itemConf, {isOpen:false});\r\n    this.trigger(TYPES.UPDATE_BROWSER, r)\r\n  },\r\n\r\n  onShowAbout(){\r\n    this.trigger(TYPES.SHOW_ABOUT)\r\n  },\r\n\r\n  onShowBrowser(browserId){\r\n    this.trigger(TYPES.SHOW_BROWSER, browserId)\r\n  },\r\n  onUpdateBrowser(itemConf, option){\r\n    const r = BrowserLogic.createResult(this.hmBrowser, itemConf);\r\n    this.trigger(TYPES.UPDATE_BROWSER, r)\r\n  },\r\n\r\n  onChangeTheme(themeName){\r\n    this.trigger(TYPES.CHANGE_THEME, themeName)\r\n  }\r\n}\r\n\r\nexport default ComponentSlice\r\n"]}