{"version":3,"sources":["../../../src/components/dialogs/DialogType1.jsx"],"names":["DF_SORTBY","caption","value","options","DialogType1","props","_selectSortBy","option","sortBy","undefined","_handleLoad","type","source","itemConf","onLoad","_handleClose","dialogComp","focusPrevEl","onClose","_createCommandButtons","S","RAISED_ROOT","CL_RAISED_DIV","_handleKeyDownWith","bind","nextProps","nextState","isShow","theme","onShow","createStyle","_commandButtons","BT","comp","R_DIALOG","BROWSER_CAPTION","SELECT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,YAAc,EAAEC,SAAS,KAAX,EAAkBC,OAAO,KAAzB,EAApB;;AAEA,IAAMC,UAAU,CACd,EAAEF,SAAS,KAAX,EAAkBC,OAAO,KAAzB,EADc,EAEd,EAAED,SAAS,SAAX,EAAsBC,OAAO,YAA7B,EAFc,EAGd,EAAED,SAAS,QAAX,EAAqBC,OAAO,aAA5B,EAHc,CAAhB;;IAOME,W;;;AACJ,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UAiBlBC,aAjBkB,GAiBF,UAACC,MAAD,EAAY;AAC1B,YAAKC,MAAL,GAAeD,MAAD,GACTA,OAAOL,KADE,GAETO,SAFL;AAGD,KArBiB;;AAAA,UAuBlBC,WAvBkB,GAuBJ,YAAM;AAAA,wBACyB,MAAKL,KAD9B;AAAA,UACVM,IADU,eACVA,IADU;AAAA,UACJC,MADI,eACJA,MADI;AAAA,UACIC,QADJ,eACIA,QADJ;AAAA,UACcC,MADd,eACcA,MADd;;AAElBA,aAAO;AACLH,kBADK;AAELC,sBAFK;AAGLC,0BAHK;AAILL,gBAAQ,MAAKA;AAJR,OAAP;AAMD,KA/BiB;;AAAA,UAiClBO,YAjCkB,GAiCH,YAAM;AACnB,YAAKC,UAAL,CAAgBC,WAAhB;AACA,YAAKZ,KAAL,CAAWa,OAAX;AACD,KApCiB;;AAAA,UAsClBC,qBAtCkB,GAsCM,UAACC,CAAD,EAAO;AAC7B,aAAO,CACL;AACE,mBAAWA,EAAEC,WADf;AAEE,eAAOD,EAAEE,aAFX;AAGE,iBAAQ,MAHV;AAIE,mBAAW,IAJb;AAKE,iBAAS,MAAKZ;AALhB,QADK,CAAP;AASD,KAhDiB;;AAEhB,UAAKF,MAAL,GAAcR,UAAUE,KAAxB;AACA,UAAKqB,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,OAA1B;AAHgB;AAIjB;;;;0CAGqBC,S,EAAWC,S,EAAU;AACzC,UAAI,KAAKrB,KAAL,KAAeoB,SAAnB,EAA6B;AAC1B,YAAI,CAAC,KAAKpB,KAAL,CAAWsB,MAAZ,IAAsB,CAACF,UAAUE,MAArC,EAA4C;AACzC,iBAAO,KAAP;AACF;AACH;AACD,aAAO,IAAP;AACD;;;6BAoCO;AAAA;;AAAA,mBAII,KAAKtB,KAJT;AAAA,UACEsB,MADF,UACEA,MADF;AAAA,UACU1B,OADV,UACUA,OADV;AAAA,UAEE2B,KAFF,UAEEA,KAFF;AAAA,UAGEC,MAHF,UAGEA,MAHF;AAAA,UAKAT,CALA,GAKIQ,MAAME,WAAN,kBALJ;AAAA,UAMAC,eANA,GAMkB,KAAKZ,qBAAL,CAA2BC,EAAEY,EAA7B,CANlB;;AAQN,aACE;AAAA;AAAA;AACK,eAAK;AAAA,mBAAQ,OAAKhB,UAAL,GAAkBiB,IAA1B;AAAA,WADV;AAEK,qBAAWb,EAAEc,QAFlB;AAGK,+BAAqBd,EAAEe,eAH5B;AAIK,uBAAaf,EAAEY,EAJpB;AAKK,mBAAS/B,OALd;AAMK,kBAAQ0B,MANb;AAOK,0BAAgBI,eAPrB;AAQK,qBAAW,KAAKR,kBARrB;AASK,uBAAaM,MATlB;AAUK,mBAAS,KAAKd;AAVnB;AAYE;AACE,mBAAQ,QADV;AAEE,oBAAUf,SAFZ;AAGE,mBAASG,OAHX;AAIE,uBAAaiB,EAAEgB,MAJjB;AAKE,oBAAU,KAAK9B;AALjB;AAZF,OADF;AAsBD;;;;;kBAGY,yBAAUF,WAAV,C","file":"DialogType1.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from './Dialog.Style'\r\n\r\nimport DraggableDialog from '../zhn-moleculs/DraggableDialog'\r\nimport InputSelect from '../zhn-m-input/InputSelect'\r\nimport RaisedButton from '../zhn-atoms/RaisedButton'\r\n\r\nimport withKeyDown from './decorators/withKeyDown'\r\n\r\nconst DF_SORTBY =   { caption: 'Top', value: 'top'};\r\n\r\nconst options = [\r\n  { caption: 'Top', value: 'top'},\r\n  { caption: 'Popular', value: 'popularity'},\r\n  { caption: 'Newest', value: 'publishedAt' }\r\n];\r\n\r\n@withKeyDown\r\nclass DialogType1 extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.sortBy = DF_SORTBY.value\r\n    this._handleKeyDownWith = this._handleKeyDownWith.bind(this)\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (this.props !== nextProps){\r\n       if (!this.props.isShow && !nextProps.isShow){\r\n          return false;\r\n       }\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  _selectSortBy = (option) => {\r\n    this.sortBy = (option)\r\n       ? option.value\r\n       : undefined\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    const { type, source, itemConf, onLoad } = this.props;\r\n    onLoad({\r\n      type,\r\n      source,\r\n      itemConf,\r\n      sortBy: this.sortBy,\r\n    })\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this.dialogComp.focusPrevEl()\r\n    this.props.onClose()\r\n  }\r\n\r\n  _createCommandButtons = (S) => {\r\n    return [\r\n      <RaisedButton\r\n        rootStyle={S.RAISED_ROOT}\r\n        clDiv={S.CL_RAISED_DIV}\r\n        caption=\"Load\"\r\n        isPrimary={true}\r\n        onClick={this._handleLoad}\r\n      />\r\n    ];\r\n  }\r\n\r\n  render(){\r\n    const { isShow, caption,\r\n            theme,\r\n            onShow\r\n          } = this.props\r\n        , S = theme.createStyle(styleConfig)\r\n        , _commandButtons = this._createCommandButtons(S.BT);\r\n\r\n    return (\r\n      <DraggableDialog\r\n           ref={comp => this.dialogComp = comp}\r\n           rootStyle={S.R_DIALOG}\r\n           browserCaptionStyle={S.BROWSER_CAPTION}\r\n           styleButton={S.BT}\r\n           caption={caption}\r\n           isShow={isShow}\r\n           commandButtons={_commandButtons}\r\n           onKeyDown={this._handleKeyDownWith}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n       >\r\n        <InputSelect\r\n          caption=\"SortBy\"\r\n          initItem={DF_SORTBY}\r\n          options={options}\r\n          styleConfig={S.SELECT}\r\n          onSelect={this._selectSortBy}\r\n        />\r\n      </DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(DialogType1)\r\n"]}