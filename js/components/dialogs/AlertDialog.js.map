{"version":3,"sources":["../../../src/components/dialogs/AlertDialog.jsx"],"names":["S","CAPTION","color","fontWeight","MSG","width","paddingTop","paddingLeft","lineHeight","whiteSpace","_toMsg","data","TypeError","message","status","url","msg","AlertDialog","_handleKeyDown","event","keyCode","props","onClose","nextProps","nextState","isShow","theme","TS","createStyle","_msg","R_DIALOG","BROWSER_CAPTION","BT","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AADA;;;;AAGA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,IAAI;AACRC,WAAS;AACPC,WAAO,SADA;AAEPC,gBAAY;AAFL,GADD;AAKRC,OAAK;AACHF,WAAO,OADJ;AAEHG,WAAQ,OAFL;AAGHC,gBAAY,MAHT;AAIHC,iBAAc,MAJX;AAKHJ,gBAAY,MALT;AAMHK,gBAAa,GANV;AAOHC,gBAAY;AAPT;AALG,CAAV;;AAgBA,IAAMC,SAAS,SAATA,MAAS,CAACC,IAAD,EAAU;AACvB,MAAIA,gBAAgBC,SAApB,EAA8B;AAC5B,WAAOD,KAAKE,OAAZ;AACD;AAHsB,MAIfC,MAJe,GAIMH,IAJN,CAIfG,MAJe;AAAA,MAIPC,GAJO,GAIMJ,IAJN,CAIPI,GAJO;AAAA,MAIFC,GAJE,GAIML,IAJN,CAIFK,GAJE;;AAKvB,MAAIF,MAAJ,EAAW;AACT,WAAUC,GAAV,eAAuBD,MAAvB;AACD,GAFD,MAEO,IAAIE,GAAJ,EAAQ;AACb,WAAOA,GAAP;AACD;AACD,SAAO,mBAAP;AACD,CAXD;;IAaMC,W;;;;;;;;;;;;;;8MAwBJC,c,GAAiB,UAACC,KAAD,EAAW;AAC1B,UAAIA,MAAMC,OAAN,KAAkB,EAAlB,IAAwBD,MAAMC,OAAN,KAAkB,EAA9C,EAAiD;AAC/C,cAAKC,KAAL,CAAWC,OAAX;AACD;AACF,K;;AA3BD;;;;;;;;;;;;;;0CAgBsBC,S,EAAWC,S,EAAU;AACzC,UAAID,cAAc,KAAKF,KAAnB,IAA4BE,UAAUE,MAAV,KAAqB,KAAKJ,KAAL,CAAWI,MAAhE,EAAwE;AACtE,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;;6BAQO;AAAA,mBACmC,KAAKJ,KADxC;AAAA,UACEI,MADF,UACEA,MADF;AAAA,UACUd,IADV,UACUA,IADV;AAAA,UACgBe,KADhB,UACgBA,KADhB;AAAA,UACuBJ,OADvB,UACuBA,OADvB;AAAA,UAEAK,EAFA,GAEKD,MAAME,WAAN,kBAFL;AAAA,UAGAC,IAHA,GAGQnB,OAAOC,IAAP,CAHR;;AAIN,aACE;AAAA;AAAA;AACG,iBAAOgB,GAAGG,QADb;AAEG,wBAAcH,GAAGI,eAFpB;AAGG,uBAAaJ,GAAGK,EAHnB;AAIG,mBAAQ,WAJX;AAKG,kBAAQP,MALX;AAMG,0BAAgB,IANnB;AAOG,qBAAW,KAAKP,cAPnB;AAQG,mBAASI;AARZ;AAUG;AAAA;AAAA;AACG;AAAA;AAAA,cAAG,OAAOtB,EAAEI,GAAZ;AACGyB;AADH;AADH;AAVH,OADF;AAkBD;;;4BAvCMI,Y,GAAe;AACpBtB,QAAM;AADc,C;kBA0CT,yBAAUM,WAAV,C","file":"AlertDialog.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from './Dialog.Style'\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog'\r\n\r\nconst S = {\r\n  CAPTION: {\r\n    color: '#f44336',\r\n    fontWeight: 'bold'\r\n  },\r\n  MSG: {\r\n    color: 'black',\r\n    width : '400px',\r\n    paddingTop: '16px',\r\n    paddingLeft : '10px',\r\n    fontWeight: 'bold',\r\n    lineHeight : 1.4,\r\n    whiteSpace: 'pre-line'\r\n  }\r\n}\r\n\r\nconst _toMsg = (data) => {\r\n  if (data instanceof TypeError){\r\n    return data.message;\r\n  }\r\n  const { status, url, msg } = data;\r\n  if (status){\r\n    return `${url}\\ncode:${status}\\nNetwork exception`;\r\n  } else if (msg){\r\n    return msg;\r\n  }\r\n  return 'Exception Message';\r\n}\r\n\r\nclass AlertDialog extends Component{\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    data: PropTypes.shape({\r\n      alertCaption: PropTypes.string,\r\n      alertItemId: PropTypes.string,\r\n      alertDescr: PropTypes.string\r\n    }),\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n  static defaultProps = {\r\n    data: {}\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props && nextProps.isShow === this.props.isShow) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleKeyDown = (event) => {\r\n    if (event.keyCode === 27 || event.keyCode === 13){\r\n      this.props.onClose()\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { isShow, data, theme, onClose } = this.props\r\n        , TS = theme.createStyle(styleConfig)\r\n        , _msg  = _toMsg(data);\r\n    return (\r\n      <ModalDialog\r\n         style={TS.R_DIALOG }\r\n         styleCaption={TS.BROWSER_CAPTION}\r\n         styleButton={TS.BT}\r\n         caption=\"Exception\"\r\n         isShow={isShow}\r\n         isClosePrimary={true}\r\n         onKeyDown={this._handleKeyDown}\r\n         onClose={onClose}\r\n      >\r\n         <div>\r\n            <p style={S.MSG}>\r\n              {_msg}\r\n            </p>\r\n         </div>\r\n      </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(AlertDialog)\r\n"]}