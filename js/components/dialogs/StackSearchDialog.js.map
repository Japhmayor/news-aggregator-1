{"version":3,"sources":["../../../src/components/dialogs/StackSearchDialog.jsx"],"names":["S","POWERED_BY","marginLeft","marginBottom","_initFromDate","getFromDate","_initToDate","getToDate","_onTestDate","isValidDate","DF_SORT_BY","caption","value","_sortByOptions","StackSearchDialog","props","_selectSortBy","option","sortBy","undefined","_handleLoad","type","source","itemConf","onLoad","_tagged","inputTagged","getValue","_inTitle","inputInTitle","fromDate","toDate","_fromDate","toUTCMillis","_toDate","loadId","requestType","tagged","inTitle","_handleClose","dialogComp","focusPrevEl","onClose","_createCommandButtons","RAISED_ROOT","CL_RAISED_DIV","_handleKeyDownWith","bind","isShow","theme","onShow","TS","createStyle","_commandButtons","BT","comp","R_DIALOG","BROWSER_CAPTION","INPUT_ROOT","SELECT"],"mappings":"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","file":"StackSearchDialog.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from './Dialog.Style'\r\n\r\nimport DateUtil from '../../utils/dt'\r\n\r\nimport DraggableDialog from '../zhn-moleculs/DraggableDialog'\r\nimport TextField from '../zhn-m-input/TextField'\r\nimport InputSelect from '../zhn-m-input/InputSelect'\r\nimport PoweredBy from '../links/PoweredBy'\r\nimport Link from '../links/Links'\r\nimport RaisedButton from '../zhn-atoms/RaisedButton'\r\n\r\nimport withKeyDown from './decorators/withKeyDown'\r\n\r\nconst S = {\r\n  POWERED_BY: {\r\n    marginLeft: '16px',\r\n    marginBottom: '8px'\r\n  }\r\n};\r\n\r\nconst _initFromDate = DateUtil.getFromDate(1)\r\n    , _initToDate = DateUtil.getToDate()\r\n    , _onTestDate = DateUtil.isValidDate;\r\n\r\nconst DF_SORT_BY = { caption: \"Score\", value: \"votes\" };\r\nconst _sortByOptions = [\r\n  { caption: \"Activity, Recent Day\", value: \"activity\" },\r\n  { caption: \"Creation Date\", value: \"creation\"},\r\n  { caption: \"Score\", value: \"votes\" },\r\n  { caption: \"Relevance\", value: \"relevance\" }\r\n];\r\n\r\n@withKeyDown\r\nclass StackSearchDialog extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.sortBy = DF_SORT_BY.value\r\n    this._handleKeyDownWith = this._handleKeyDownWith.bind(this)\r\n  }\r\n\r\n  _selectSortBy = (option) => {\r\n    this.sortBy = (option)\r\n       ? option.value\r\n       : undefined\r\n  }\r\n\r\n  _handleLoad = () => {\r\n    const { type, source, itemConf, onLoad } = this.props\r\n        , _tagged = this.inputTagged.getValue()\r\n        , _inTitle = this.inputInTitle.getValue()\r\n        , fromDate = this.fromDate.getValue()\r\n        , toDate = this.toDate.getValue()\r\n        , _fromDate = DateUtil.toUTCMillis(fromDate)/1000\r\n        , _toDate = DateUtil.toUTCMillis(toDate)/1000;\r\n\r\n    onLoad({\r\n      type,\r\n      source,\r\n      itemConf,\r\n      loadId: 'SO',\r\n      requestType: 'SEARCH',\r\n      tagged: _tagged,\r\n      inTitle: _inTitle,\r\n      sortBy: this.sortBy,\r\n      fromDate: _fromDate,\r\n      toDate: _toDate\r\n    })\r\n  }\r\n\r\n  _handleClose = () => {\r\n    this.dialogComp.focusPrevEl()\r\n    this.props.onClose()\r\n  }\r\n\r\n  _createCommandButtons = (S) => {\r\n    return [\r\n      <RaisedButton\r\n        rootStyle={S.RAISED_ROOT}\r\n        clDiv={S.CL_RAISED_DIV}\r\n        caption=\"Load\"\r\n        isPrimary={true}\r\n        onClick={this._handleLoad}\r\n      />\r\n    ];\r\n  }\r\n\r\n  render(){\r\n    const { isShow, theme, onShow } = this.props\r\n         , TS = theme.createStyle(styleConfig)\r\n         , _commandButtons = this._createCommandButtons(TS.BT);\r\n\r\n    return (\r\n      <DraggableDialog\r\n           ref={comp => this.dialogComp = comp}\r\n           rootStyle={TS.R_DIALOG}\r\n           browserCaptionStyle={TS.BROWSER_CAPTION}\r\n           styleButton={TS.BT}\r\n           caption=\"Search Questions\"\r\n           isShow={isShow}\r\n           commandButtons={_commandButtons}\r\n           onKeyDown={this._handleKeyDownWith}\r\n           onShowChart={onShow}\r\n           onClose={this._handleClose}\r\n       >\r\n         <TextField\r\n           rootStyle={TS.INPUT_ROOT}\r\n           ref={comp => this.inputTagged = comp}\r\n           caption=\"Tagged (Default: CSS)\"\r\n           initValue=\"CSS\"\r\n         />\r\n         <TextField\r\n           rootStyle={TS.INPUT_ROOT}\r\n           ref={comp => this.inputInTitle = comp}\r\n           caption=\"In Title (Default: flexbox)\"\r\n           initValue=\"flexbox\"\r\n         />\r\n         <InputSelect\r\n           caption=\"SortBy\"\r\n           initItem={DF_SORT_BY}\r\n           options={_sortByOptions}\r\n           styleConfig={TS.SELECT}\r\n           onSelect={this._selectSortBy}\r\n         />\r\n        <TextField\r\n          rootStyle={TS.INPUT_ROOT}\r\n          ref={comp => this.fromDate = comp}\r\n          caption=\"From Date\"\r\n          initValue={_initFromDate}\r\n          errorMsg=\"YYYY-MM-DD format must be\"\r\n          onTest={_onTestDate}\r\n        />\r\n        <TextField\r\n          rootStyle={TS.INPUT_ROOT}\r\n          ref={comp => this.toDate = comp}\r\n          caption=\"To Date\"\r\n          initValue={_initToDate}\r\n          errorMsg=\"YYYY-MM-DD format must be\"\r\n          onTest={_onTestDate}\r\n        />\r\n\r\n        <PoweredBy rootStyle={S.POWERED_BY}>\r\n          <Link.StackOverflow />\r\n        </PoweredBy>\r\n      </DraggableDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(StackSearchDialog)\r\n"]}