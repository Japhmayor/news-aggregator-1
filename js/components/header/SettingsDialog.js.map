{"version":3,"sources":["../../../src/components/header/SettingsDialog.jsx"],"names":["S","MODAL","position","width","height","margin","DIV_BT","marginTop","marginBottom","SET_NEWS_KEY","SET_WEBHOSE_KEY","DF_THEME","caption","value","_themeOptions","STR_EMPTY","_onTestLengthOrEmpty","length","str","_onTestNewsApi","_onTestWebhose","SettingsDialog","props","_handleKeyDown","event","keyCode","onClose","_handleSet","data","setNewsKey","setWebhoseKey","inputNews","getValue","inputWebhose","_selectTheme","item","theme","getThemeName","setThemeName","changeTheme","forceUpdate","_createCommandButtons","RAISED_ROOT","CL_RAISED_DIV","_refInputNews","comp","_refInputWebhose","nextProps","nextState","isShow","TS","createStyle","_commandButtons","BT","R_DIALOG","BROWSER_CAPTION","INPUT_ROOT","SELECT"],"mappings":"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","file":"SettingsDialog.js","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport safeFn from '../../utils/safeFn'\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from '../dialogs/Dialog.Style'\r\n\r\nimport Actions from '../../flux/actions/ComponentActions'\r\n\r\nimport ModalDialog from '../zhn-moleculs/ModalDialog'\r\nimport SecretField from '../zhn-m-input/SecretField'\r\nimport InputSelect from '../zhn-m-input/InputSelect'\r\nimport RaisedButton from '../zhn-atoms/RaisedButton'\r\n\r\nconst S = {\r\n  MODAL : {\r\n    position : 'static',\r\n    width: '320px',\r\n    height: '300px',\r\n    margin: '70px auto 0px'\r\n  },\r\n  DIV_BT: {\r\n    marginTop: '26px',\r\n    marginBottom: '4px'\r\n  }\r\n};\r\n\r\nconst SET_NEWS_KEY = 'setNewsKey';\r\nconst SET_WEBHOSE_KEY = 'setWebhoseKey';\r\n\r\nconst DF_THEME = { caption: \"Dark\", value: \"GREY\" };\r\nconst _themeOptions = [\r\n  { caption: \"Dark\", value: \"GREY\" },\r\n  { caption: \"Light\", value: \"WHITE\" },\r\n  { caption: \"Sand\", value: \"SAND\" }\r\n];\r\n\r\nconst STR_EMPTY = '';\r\nconst _onTestLengthOrEmpty = (length) => (str) => {\r\n  if ( str.length === length || str === STR_EMPTY) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst _onTestNewsApi = _onTestLengthOrEmpty(32);\r\nconst _onTestWebhose = _onTestLengthOrEmpty(36);\r\n\r\nclass SettingsDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    data: PropTypes.shape({\r\n      setNewsKey: PropTypes.func,\r\n      setWebhoseKey: PropTypes.func,\r\n    }),\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n  constructor(props){\r\n    super()\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props\r\n      && nextProps.isShow === this.props.isShow\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleKeyDown = (event) => {\r\n    if (event.keyCode === 13 || event.keyCode === 27) {\r\n      this.props.onClose()\r\n    }\r\n  }\r\n\r\n  _handleSet = () => {\r\n    const { data, onClose } = this.props\r\n        , setNewsKey = safeFn(data, SET_NEWS_KEY)\r\n        , setWebhoseKey = safeFn(data, SET_WEBHOSE_KEY);\r\n    setNewsKey(this.inputNews.getValue())\r\n    setWebhoseKey(this.inputWebhose.getValue())\r\n    onClose()\r\n  }\r\n\r\n  _selectTheme = (item) => {\r\n    const { theme } = this.props;\r\n    if (\r\n        item &&\r\n        theme.getThemeName() !== item.value\r\n    ) {\r\n      theme.setThemeName(item.value)\r\n      Actions.changeTheme(item.value)\r\n      this.forceUpdate()\r\n    }\r\n  }\r\n\r\n  _createCommandButtons = (S) => {\r\n    return [\r\n      <RaisedButton\r\n        rootStyle={S.RAISED_ROOT}\r\n        clDiv={S.CL_RAISED_DIV}\r\n        caption=\"Set & Close\"\r\n        onClick={this._handleSet}\r\n      />\r\n    ];\r\n  }\r\n\r\n  _refInputNews = comp => this.inputNews = comp\r\n  _refInputWebhose = comp => this.inputWebhose = comp\r\n\r\n  render(){\r\n    const { isShow, theme, onClose } = this.props\r\n        , TS = theme.createStyle(styleConfig)\r\n        , _commandButtons = this._createCommandButtons(TS.BT);\r\n\r\n    return (\r\n        <ModalDialog\r\n           style={{ ...S.MODAL, ...TS.R_DIALOG }}\r\n           divBtStyle={S.DIV_BT}\r\n           styleCaption={TS.BROWSER_CAPTION}\r\n           styleButton={TS.BT}\r\n           caption=\"User Settings\"\r\n           isShow={isShow}\r\n           isClosePrimary={true}\r\n           commandButtons={_commandButtons}\r\n           onKeyDown={this._handleKeyDown}\r\n           onClose={onClose}\r\n        >\r\n           <SecretField\r\n              rootStyle={TS.INPUT_ROOT}\r\n              ref={this._refInputNews}\r\n              caption=\"NewsApi API Key (32 Symbols)\"\r\n              maxLength={32}\r\n              errorMsg=\"32 symbols must be\"\r\n              onTest={_onTestNewsApi}\r\n           />\r\n           <SecretField\r\n              rootStyle={TS.INPUT_ROOT}\r\n              ref={this._refInputWebhose}\r\n              caption=\"Webhose API Key (36 Symbols)\"\r\n              maxLength={36}\r\n              errorMsg=\"36 symbols must be\"\r\n              onTest={_onTestWebhose}\r\n           />\r\n           <InputSelect\r\n             styleConfig={TS.SELECT}\r\n             caption=\"Theme (Default: Dark)\"\r\n             initItem={DF_THEME}\r\n             options={_themeOptions}\r\n             onSelect={this._selectTheme}\r\n           />\r\n       </ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(SettingsDialog)\r\n"]}