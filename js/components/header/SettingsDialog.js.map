{"version":3,"sources":["../../../src/components/header/SettingsDialog.jsx"],"names":["S","MODAL","position","width","height","margin","DIV_BT","marginTop","marginBottom","TABS","marginLeft","textAlign","TAB_SELECTED","color","CARD_ROOT","CARD_BUTTONS","right","bottom","cursor","INPUT_WIDTH","SettingsDialog","_handleKeyDown","event","keyCode","props","onClose","_selectTheme","item","theme","getThemeName","value","setThemeName","Actions","changeTheme","forceUpdate","shouldComponentUpdate","nextProps","nextState","isShow","render","data","TS","createStyle","styleConfig","_TS","JSON","parse","stringify","Object","assign","SELECT","ROOT","R_DIALOG","BROWSER_CAPTION","BT","_refInput","INPUT_ROOT","Component"],"mappings":";;;;;;;;;;;;;AAAA;;AAGA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AAEA,IAAMA,CAAC,GAAG;AACRC,EAAAA,KAAK,EAAG;AACNC,IAAAA,QAAQ,EAAG,QADL;AAENC,IAAAA,KAAK,EAAE,GAFD;AAGNC,IAAAA,MAAM,EAAE,GAHF;AAINC,IAAAA,MAAM,EAAE;AAJF,GADA;AAORC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,EADL;AAENC,IAAAA,YAAY,EAAE;AAFR,GAPA;AAaRC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,EADR;AAEJC,IAAAA,SAAS,EAAE;AAFP,GAbE;AAiBRC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAjBN;AAoBRC,EAAAA,SAAS,EAAE;AACTZ,IAAAA,QAAQ,EAAE,UADD;AAETE,IAAAA,MAAM,EAAE;AAFC,GApBH;AAwBRW,EAAAA,YAAY,EAAE;AACZb,IAAAA,QAAQ,EAAE,UADE;AAEZc,IAAAA,KAAK,EAAE,CAFK;AAGZC,IAAAA,MAAM,EAAE,CAHI;AAIZC,IAAAA,MAAM,EAAE;AAJI,GAxBN;AA8BRC,EAAAA,WAAW,EAAE;AACXhB,IAAAA,KAAK,EAAE;AADI;AA9BL,CAAV;;IAmCMiB,c;;;;;;;;;;;;;;UAsBJC,c,GAAiB,UAACC,KAAD,EAAW;AAC1B,UAAIA,KAAK,CAACC,OAAN,KAAkB,EAAlB,IAAwBD,KAAK,CAACC,OAAN,KAAkB,EAA9C,EAAkD;AAChD,cAAKC,KAAL,CAAWC,OAAX;AACD;AACF,K;;UAEDC,Y,GAAe,UAACC,IAAD,EAAU;AAAA,UACfC,KADe,GACL,MAAKJ,KADA,CACfI,KADe;;AAEvB,UACID,IAAI,IACJC,KAAK,CAACC,YAAN,OAAyBF,IAAI,CAACG,KAFlC,EAGE;AACAF,QAAAA,KAAK,CAACG,YAAN,CAAmBJ,IAAI,CAACG,KAAxB;;AACAE,qCAAQC,WAAR,CAAoBN,IAAI,CAACG,KAAzB;;AACA,cAAKI,WAAL;AACD;AACF,K;;;;;;;AArCD;;;;;;;;;;SAYAC,qB,GAAA,+BAAsBC,SAAtB,EAAiCC,SAAjC,EAA2C;AACzC,QAAID,SAAS,KAAK,KAAKZ,KAAnB,IACCY,SAAS,CAACE,MAAV,KAAqB,KAAKd,KAAL,CAAWc,MADrC,EAEE;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,G;;SAoBDC,M,GAAA,kBAAQ;AAAA,sBACmC,KAAKf,KADxC;AAAA,QACEc,MADF,eACEA,MADF;AAAA,QACUV,KADV,eACUA,KADV;AAAA,QACiBY,IADjB,eACiBA,IADjB;AAAA,QACuBf,OADvB,eACuBA,OADvB;AAAA,QAEJgB,EAFI,GAECb,KAAK,CAACc,WAAN,CAAkBC,kBAAlB,CAFD;AAAA,QAGJC,GAHI,GAGEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,EAAf,CAAX,CAHF;;AAINO,IAAAA,MAAM,CAACC,MAAP,CAAcL,GAAG,CAACM,MAAJ,CAAWC,IAAzB,EAA+BnD,CAAC,CAACmB,WAAjC;AACA,WACI,gCAAC,gBAAD,CAAG,WAAH;AACG,MAAA,KAAK,gCAAOnB,CAAC,CAACC,KAAT,MAAmBwC,EAAE,CAACW,QAAtB,CADR;AAEG,MAAA,UAAU,EAAEpD,CAAC,CAACM,MAFjB;AAGG,MAAA,YAAY,EAAEmC,EAAE,CAACY,eAHpB;AAIG,MAAA,WAAW,EAAEZ,EAAE,CAACa,EAJnB;AAKG,MAAA,OAAO,EAAC,eALX;AAMG,MAAA,YAAY,EAAE,KANjB;AAOG,MAAA,MAAM,EAAEhB,MAPX;AAQG,MAAA,SAAS,EAAE,KAAKjB,cARnB;AASG,MAAA,OAAO,EAAEI;AATZ,OAWE,gCAAC,gBAAD,CAAG,OAAH;AACG,MAAA,KAAK,EAAC,MADT;AAEG,MAAA,SAAS,EAAEzB,CAAC,CAACS,IAFhB;AAGG,MAAA,aAAa,EAAET,CAAC,CAACY;AAHpB,OAKG,gCAAC,gBAAD,CAAG,GAAH;AAAO,MAAA,KAAK,EAAC;AAAb,OACG,gCAAC,uBAAD;AACE,MAAA,GAAG,EAAE,KAAK2C,SADZ;AAEE,MAAA,KAAK,EAAEvD,CAAC,CAACc,SAFX;AAGE,MAAA,UAAU,gCAAM2B,EAAE,CAACe,UAAT,MAAwBxD,CAAC,CAACmB,WAA1B,CAHZ;AAIE,MAAA,YAAY,EAAEnB,CAAC,CAACe,YAJlB;AAKE,MAAA,EAAE,EAAE0B,EALN;AAME,MAAA,IAAI,EAAED,IANR;AAOE,MAAA,OAAO,EAAEf;AAPX,MADH,CALH,EAgBG,gCAAC,gBAAD,CAAG,GAAH;AAAO,MAAA,KAAK,EAAC;AAAb,OACG,gCAAC,uBAAD;AACE,MAAA,KAAK,EAAEzB,CAAC,CAACc,SADX;AAEE,MAAA,YAAY,EAAEd,CAAC,CAACe,YAFlB;AAGE,MAAA,EAAE,EAAE6B,GAHN;AAIE,MAAA,UAAU,EAAE,KAAKlB,YAJnB;AAKE,MAAA,OAAO,EAAED;AALX,MADH,CAhBH,CAXF,CADJ;AAwCD,G;;;EArF0BgC,gB;;eAwFd,2BAAUrC,cAAV,C","sourcesContent":["import React, { Component } from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nimport withTheme from '../hoc/withTheme'\r\nimport styleConfig from '../dialogs/Dialog.Style'\r\n\r\nimport Actions from '../../flux/actions/ComponentActions'\r\n\r\nimport A from '../Comp'\r\nimport CardApiKeys from './CardApiKeys'\r\nimport CardUiTheme from './CardUiTheme'\r\n\r\nconst S = {\r\n  MODAL : {\r\n    position : 'static',\r\n    width: 320,\r\n    height: 370,\r\n    margin: '70px auto 0px'\r\n  },\r\n  DIV_BT: {\r\n    marginTop: 26,\r\n    marginBottom: 4\r\n  },\r\n\r\n\r\n  TABS: {\r\n    marginLeft: 24,\r\n    textAlign: 'left'\r\n  },\r\n  TAB_SELECTED: {\r\n    color: 'black'\r\n  },\r\n  CARD_ROOT: {\r\n    position: 'relative',\r\n    height: 280\r\n  },\r\n  CARD_BUTTONS: {\r\n    position: 'absolute',\r\n    right: 4,\r\n    bottom: 0,\r\n    cursor: 'default'\r\n  },\r\n  INPUT_WIDTH: {\r\n    width: 280\r\n  }\r\n};\r\n\r\nclass SettingsDialog extends Component {\r\n  /*\r\n  static propTypes = {\r\n    isShow: PropTypes.bool,\r\n    data: PropTypes.shape({\r\n      setNewsKey: PropTypes.func,\r\n      setWebhoseKey: PropTypes.func,\r\n    }),\r\n    onClose: PropTypes.func\r\n  }\r\n  */\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if (nextProps !== this.props\r\n      && nextProps.isShow === this.props.isShow\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _handleKeyDown = (event) => {\r\n    if (event.keyCode === 13 || event.keyCode === 27) {\r\n      this.props.onClose()\r\n    }\r\n  }\r\n\r\n  _selectTheme = (item) => {\r\n    const { theme } = this.props;\r\n    if (\r\n        item &&\r\n        theme.getThemeName() !== item.value\r\n    ) {\r\n      theme.setThemeName(item.value)\r\n      Actions.changeTheme(item.value)\r\n      this.forceUpdate()\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { isShow, theme, data, onClose } = this.props\r\n    , TS = theme.createStyle(styleConfig)\r\n    , _TS = JSON.parse(JSON.stringify(TS));\r\n    Object.assign(_TS.SELECT.ROOT, S.INPUT_WIDTH)\r\n    return (\r\n        <A.ModalDialog\r\n           style={{ ...S.MODAL, ...TS.R_DIALOG }}\r\n           divBtStyle={S.DIV_BT}\r\n           styleCaption={TS.BROWSER_CAPTION}\r\n           styleButton={TS.BT}\r\n           caption=\"User Settings\"\r\n           isWithButton={false}\r\n           isShow={isShow}\r\n           onKeyDown={this._handleKeyDown}\r\n           onClose={onClose}\r\n        >\r\n          <A.TabPane\r\n             width=\"100%\"\r\n             tabsStyle={S.TABS}\r\n             selectedStyle={S.TAB_SELECTED}\r\n          >\r\n             <A.Tab title=\"API Key\">\r\n                <CardApiKeys\r\n                  ref={this._refInput}\r\n                  style={S.CARD_ROOT}\r\n                  fieldStyle={{...TS.INPUT_ROOT, ...S.INPUT_WIDTH}}\r\n                  buttonsStyle={S.CARD_BUTTONS}\r\n                  TS={TS}\r\n                  data={data}\r\n                  onClose={onClose}\r\n                />\r\n             </A.Tab>\r\n             <A.Tab title=\"UI Theme\">\r\n                <CardUiTheme\r\n                  style={S.CARD_ROOT}\r\n                  buttonsStyle={S.CARD_BUTTONS}\r\n                  TS={_TS}\r\n                  onSetTheme={this._selectTheme}\r\n                  onClose={onClose}\r\n                />\r\n             </A.Tab>\r\n           </A.TabPane>\r\n       </A.ModalDialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(SettingsDialog)\r\n"],"file":"SettingsDialog.js"}