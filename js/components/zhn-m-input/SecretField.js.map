{"version":3,"sources":["../../../src/components/zhn-m-input/SecretField.jsx"],"names":["CL_SELECT","CL_LABEL","CL_DIV","CL_INPUT","S","ROOT","width","display","LABEL_TO_INPUT","transform","LABEL_ON_ERROR","color","LINE","position","bottom","borderBottom","LINE_ERROR","MSG_ERROR","left","_maskValue","len","i","str","SecretField","props","_handleFocusInput","isFocus","forceUpdate","_handleBlurInput","_handleChangeInput","event","secret","target","value","_value","length","isOnTest","_isPassTest","onTest","setState","isPassTest","_handleKeyDown","keyCode","state","rootStyle","caption","errorMsg","maxLength","_labelStyle","undefined","_labelErrStyle","_lineStyle"],"mappings":"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","file":"SecretField.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst CL_SELECT = 'm-select';\r\nconst CL_LABEL = 'm-select__label';\r\nconst CL_DIV = 'm-textfield-input__div';\r\nconst CL_INPUT = 'm-textfield-input';\r\n\r\nconst S = {\r\n  ROOT: {\r\n     width: '280px',\r\n     display: 'block'\r\n  },\r\n  LABEL_TO_INPUT: {\r\n     transform: 'scale(1) translate(0px, 0px)'\r\n  },\r\n  LABEL_ON_ERROR: {\r\n    color: '#F44336'\r\n  },\r\n  LINE: {\r\n    position: 'absolute',\r\n    bottom: '6px',\r\n    width: '100%',\r\n    borderBottom: '2px solid black'\r\n  },\r\n  LINE_ERROR: {\r\n    borderBottom: '2px solid #F44336'\r\n  },\r\n  MSG_ERROR: {\r\n    position: 'absolute',\r\n    bottom: '-18px',\r\n    left: '4px',\r\n    color: '#F44336'\r\n  }\r\n};\r\n\r\nconst _maskValue = (len=0) => {\r\n  let i=0, str = '';\r\n  for (i; i<len; i++){\r\n    str = str + 'X'\r\n  }\r\n  return str;\r\n};\r\n\r\n\r\nclass SecretField extends Component {\r\n  constructor(props){\r\n    super()\r\n    this.isFocus = false\r\n    this.isOnTest = (typeof props.onTest === 'function') ? true : false\r\n    this.state = {\r\n      value: '',\r\n      isPassTest: true\r\n    }\r\n  }\r\n\r\n  _handleFocusInput = () => {\r\n    this.isFocus = true\r\n    this.forceUpdate()\r\n  }\r\n  _handleBlurInput = () => {\r\n    this.isFocus = false\r\n    this.forceUpdate()\r\n  }\r\n\r\n  _handleChangeInput = (event) => {\r\n    this.secret = event.target.value\r\n    const _value = _maskValue(this.secret.length)\r\n    if (this.isOnTest) {\r\n      const _isPassTest = this.props.onTest(_value)\r\n      this.setState({\r\n        value : _value,\r\n        isPassTest: _isPassTest\r\n      })\r\n    } else {\r\n      this.setState({ value : _value })\r\n    }\r\n  }\r\n\r\n  _handleKeyDown = (event) => {\r\n    if (event.keyCode === 27){\r\n      this.secret = ''\r\n      const _isPassTest = (this.isOnTest)\r\n               ? this.props.onTest(this.secret)\r\n               : true;\r\n      this.setState({ value: '', isPassTest: _isPassTest })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { rootStyle, caption, errorMsg='', maxLength } = this.props\r\n        , { value, isPassTest } = this.state\r\n        , _labelStyle = (value || this.isFocus)\r\n            ? undefined\r\n            : S.LABEL_TO_INPUT\r\n        , _labelErrStyle = (isPassTest)\r\n            ? undefined\r\n            : S.LABEL_ON_ERROR\r\n        , _lineStyle = (isPassTest)\r\n            ? undefined\r\n            : S.LINE_ERROR;\r\n\r\n    return (\r\n      <div\r\n        className={CL_SELECT}\r\n        style={rootStyle}\r\n      >\r\n        <label\r\n          className={CL_LABEL}\r\n          style={{..._labelStyle, ..._labelErrStyle}}\r\n         >\r\n          {caption}\r\n        </label>\r\n        <div className={CL_DIV}>\r\n          <input\r\n             className={CL_INPUT}\r\n             name=\"secret\"\r\n             autoComplete=\"new-secret\"\r\n             autoCorrect=\"off\"\r\n             autoCapitalize=\"off\"\r\n             spellCheck={false}\r\n             type=\"password\"\r\n             translate={false}\r\n             //placeholder={placeholder}\r\n             maxLength={maxLength}\r\n             value={value}\r\n             defaultValue={value}\r\n\r\n             onChange={this._handleChangeInput}\r\n             onFocus={this._handleFocusInput}\r\n             onBlur={this._handleBlurInput}\r\n             onKeyDown={this._handleKeyDown}\r\n          />\r\n          <div style={{...S.LINE, ..._lineStyle}} />\r\n          { _lineStyle && <div style={S.MSG_ERROR}>{errorMsg}</div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getValue(){\r\n    return this.secret;\r\n  }\r\n}\r\n\r\nexport default SecretField\r\n"]}